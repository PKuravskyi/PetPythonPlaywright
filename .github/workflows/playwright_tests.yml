name: Run Playwright Tests

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test'
        required: true
        default: 'main'
      browsers:
        description: 'Browsers (comma-separated). Possible values: chromium, firefox, webkit. Example: chromium, firefox'
        required: true
        default: 'chromium'
      tags:
        description: |
          Tags (markers) for tests. You can combine multiple markers using 'and', 'or', 'not'.
          Examples:
            'smoke and ui',
            'smoke and not wip',
            'not wip'
        required: false
      tests_list:
        description: |
          List of tests to run, separated by spaces (or commas).
          You can specify folders, files, or single tests.
          Examples:
            'ui/',
            'ui/register_user_test.py',
            'ui/arts_test.py::test_art_can_be_removed_from_basket'.
          If multiple: separate by space or comma
            Example: ui/login_test.py, ui/arts_test.py::test_art_can_be_added_to_basket
      threads:
        description: 'How many tests to run in parallel'
        required: true
        default: '5'

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --no-interaction --no-ansi
          poetry run python -m playwright install --with-deps

      - name: Start Shopping Store App
        run: |
          chmod +x './ShoppingStoreApp/shopping-store-linux-amd64'
          ./ShoppingStoreApp/shopping-store-linux-amd64 > /dev/null 2>&1 &

      - name: Run Tests
        run: |
          BROWSERS=$(echo "${{ github.event.inputs.browsers }}" | sed 's/, */,/g' | tr ',' '\n' | sed 's/^/--browser /' | tr '\n' ' ')
          TEST_COMMAND="poetry run xvfb-run pytest -n ${{ github.event.inputs.threads }} $BROWSERS"
          
          if [ -n "${{ github.event.inputs.tests_list }}" ]; then
            TESTS=$(echo "${{ github.event.inputs.tests_list }}" | sed 's/, */,/g' | tr ',' '\n' | sed 's/^/tests\//' | tr '\n' ' ')
            TEST_COMMAND="$TEST_COMMAND $TESTS"
          fi

          echo "Running: $TEST_COMMAND" | awk '{$1=$1;print}'
          eval $(echo "$TEST_COMMAND" | awk '{$1=$1;print}')

      - name: Generate Allure Report
        run: |
          poetry run allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
